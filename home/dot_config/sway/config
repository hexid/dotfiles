### Variables
set $mod Mod4

set $term kitty

set $menu wofi -i -S run | xargs swaymsg exec --
set $drun wofi -i -S drun | xargs swaymsg exec --
set $pass rofi-rbw --action copy --selector wofi --selector-args='-i' --target password
set $totp rofi-rbw --action copy --selector wofi --selector-args='-i' --target totp
set $calc rofi -show calc -modi calc -no-show-match -no-sort

set $next_or_new swaymsg -r -t get_workspaces | jq -r --arg OUTPUT $(swaymsg -t get_outputs -r | jq -r '.[] | select(.focused == true) | .name') '(. | (max_by(.num) | .num)) as $max | [.[] | select(.output == $OUTPUT)] | (max_by(.num) | .num) as $maxOutput | (.[] | select(.focused == true)) as $current | if ($maxOutput > $current.num) or $current.representation == null then "next_on_output" else $max + 1 end'
set $previous_or_new swaymsg -r -t get_workspaces | jq -r --arg OUTPUT $(swaymsg -t get_outputs -r | jq -r '.[] | select(.focused == true) | .name') '(. | (max_by(.num) | .num)) as $max | [.[] | select(.output == $OUTPUT)] | (min_by(.num) | .num) as $minOutput | (.[] | select(.focused == true) | .num) as $current | if $minOutput < $current then "prev_on_output" else $max + 1 end'

### Output configuration
output * bg /usr/share/backgrounds/sway/Sway_Wallpaper_Blue_1920x1080.png fill

output eDP-1 mode 1920x1080
output eDP-1 scale 1
output eDP-1 pos 3840,0

output HDMI-A-1 mode 2560x1080
output HDMI-A-1 scale 1
output HDMI-A-1 pos 1280,0

output DP-1 mode 1280x1080
output DP-1 scale 1
output DP-1 pos 0,0

### Input configuration
input * {
    xkb_layout "us,us"
    xkb_variant "dvorak,"
    xkb_options "caps:escape"
}

input "12951:6505:ZSA_Technology_Labs_Moonlander_Mark_I" {
    xkb_layout "us"
    xkb_variant ""
    xkb_options ""
}
input "12951:6505:ZSA_Technology_Labs_Moonlander_Mark_I_Consumer_Control" {
    xkb_layout "us"
    xkb_variant ""
    xkb_options ""
}
input "12951:6505:ZSA_Technology_Labs_Moonlander_Mark_I_System_Control" {
    xkb_layout "us"
    xkb_variant ""
    xkb_options ""
}
input "12951:6505:ZSA_Technology_Labs_Moonlander_Mark_I_Keyboard" {
    xkb_layout "us"
    xkb_variant ""
    xkb_options ""
}

input type:touchpad {
    natural_scroll enabled
    click_method clickfinger
    middle_emulation enabled
}

input type:touch {
    map_to_output eDP-1
}

### Key bindings
# Basics:
    bindsym $mod+Escape exec swaylock

    bindsym $mod+Return exec $term

    bindsym $mod+Shift+q kill

    bindsym $mod+o exec $menu
    bindsym $mod+Shift+o exec $pass
    bindsym $mod+Shift+t exec $totp
    bindsym $mod+d exec $drun

    bindsym $mod+c exec $calc
    bindsym $mod+Print exec flameshot gui

    bindsym --locked XF86MonBrightnessDown exec brightnessctl set 5%-
    bindsym --locked XF86MonBrightnessUp exec brightnessctl set +5%

    bindsym XF86AudioLowerVolume exec pulseaudio.sh --volume-down
    bindsym XF86AudioRaiseVolume exec pulseaudio.sh --volume-up
    bindsym XF86AudioMute exec pulseaudio.sh --mute
    bindsym XF86AudioMicMute exec pulseaudio.sh --mute-source
    bindsym $mod+XF86AudioMicMute exec pulseaudio.sh --mute-source

    bindsym XF86AudioPlay exec playerctl play-pause
    bindsym XF86AudioNext exec playerctl next
    bindsym XF86AudioPrev exec playerctl previous

    # Drag floating windows by holding down $mod and left mouse button.
    # Resize them with right mouse button + $mod.
    # Despite the name, also works for non-floating windows.
    # Change normal to inverse to use left mouse button for resizing and right
    # mouse button for dragging.
    floating_modifier $mod normal

    # Reload the configuration file
    bindsym $mod+Shift+r reload

    # Exit sway (logs you out of your Wayland session)
    bindsym $mod+Shift+e exec swaynag -t warning -m 'You pressed the exit shortcut. Do you really want to exit sway? This will end your Wayland session.' -b 'Yes, exit sway' 'swaymsg exit'

# Moving around:
    # Move your focus around
    bindsym $mod+Left focus left
    bindsym $mod+Down focus down
    bindsym $mod+Up focus up
    bindsym $mod+Right focus right

    # Move the focused window with the same, but add Shift
    bindsym $mod+Shift+Left move left
    bindsym $mod+Shift+Down move down
    bindsym $mod+Shift+Up move up
    bindsym $mod+Shift+Right move right

    bindsym $mod+apostrophe focus output right
    bindsym $mod+Alt+apostrophe focus output left
    bindsym $mod+Shift+apostrophe move output right
    bindsym $mod+Shift+Alt+apostrophe move output left

# Workspaces:
    # Switch to workspace
    bindsym $mod+1 workspace number 1
    bindsym $mod+2 workspace number 2
    bindsym $mod+3 workspace number 3
    bindsym $mod+4 workspace number 4
    bindsym $mod+5 workspace number 5
    bindsym $mod+6 workspace number 6
    bindsym $mod+7 workspace number 7
    bindsym $mod+8 workspace number 8
    bindsym $mod+9 workspace number 9
    bindsym $mod+0 workspace number 10
    #bindsym $mod+comma workspace prev_on_output
    #bindsym $mod+period workspace next_on_output
    bindsym $mod+comma exec swaymsg "workspace $($previous_or_new)"
    bindsym $mod+period exec swaymsg "workspace $($next_or_new)"
    # Move focused container to workspace
    bindsym $mod+Shift+1 move container to workspace number 1
    bindsym $mod+Shift+2 move container to workspace number 2
    bindsym $mod+Shift+3 move container to workspace number 3
    bindsym $mod+Shift+4 move container to workspace number 4
    bindsym $mod+Shift+5 move container to workspace number 5
    bindsym $mod+Shift+6 move container to workspace number 6
    bindsym $mod+Shift+7 move container to workspace number 7
    bindsym $mod+Shift+8 move container to workspace number 8
    bindsym $mod+Shift+9 move container to workspace number 9
    bindsym $mod+Shift+0 move container to workspace number 10
    #bindsym $mod+Shift+comma move container to workspace prev_on_output
    #bindsym $mod+Shift+period move container to workspace next_on_output
    bindsym $mod+Shift+comma exec swaymsg "move container to workspace $($previous_or_new)"
    bindsym $mod+Shift+period exec swaymsg "move container to workspace $($next_or_new)"

# Layout stuff
    bindsym $mod+v split horizontal
    bindsym $mod+z split vertical
    bindsym $mod+r split none
    bindsym $mod+w split toggle

    bindsym $mod+k layout stacking
    bindsym $mod+b layout tabbed
    bindsym $mod+Space layout toggle split

    bindsym $mod+f fullscreen

    bindsym $mod+g floating toggle

    # Swap focus between the tiling area and the floating area
    bindsym $mod+Shift+g focus mode_toggle

    # Move focus to the parent container
    bindsym $mod+a focus parent

# Scratchpad:
    # Move the currently focused window to the scratchpad
    bindsym $mod+Shift+minus move scratchpad
    # Show the next scratchpad window or hide the focused scratchpad window.
    # If there are multiple scratchpad windows, this command cycles through them.
    bindsym $mod+minus scratchpad show

mode "resize" {
    # left will shrink the containers width
    # right will grow the containers width
    # up will shrink the containers height
    # down will grow the containers height
    bindsym Left resize shrink width 10px
    bindsym Down resize grow height 10px
    bindsym Up resize shrink height 10px
    bindsym Right resize grow width 10px

    # Return to default mode
    bindsym Return mode "default"
    bindsym Escape mode "default"
}
bindsym $mod+i mode "resize"

focus_follows_mouse yes

bar {
    position top
    swaybar_command waybar
}

#hide_edge_borders --i3 both
default_border normal
default_floating_border normal
#smart_borders no_gaps
smart_gaps on
gaps inner 10
gaps outer 0

for_window {
    [window_role="(pop-up|bubble|dialog)"] floating enable

    [shell="xwayland"] title_format "%title :: %shell"
    #[shell="xwayland"] client.focused
}

for_window [app_id="flameshot"] border pixel 0, floating enable, fullscreen disable, move absolute position 0 0

exec swayidle -w timeout 300 'swaylock' before-sleep 'swaylock'
exec mako

include /etc/sway/config.d/*
