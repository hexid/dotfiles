#!/usr/bin/env bash

# If not running interactively, don't do anything
[[ $- != *i* ]] && return

[ -r /usr/share/doc/pkgfile/command-not-found.bash ] && . /usr/share/doc/pkgfile/command-not-found.bash

[ -f ~/.config/xdg.sh ] && . ~/.config/xdg.sh

export PATH="$PATH:$XDG_BIN_HOME"
export EDITOR='/usr/bin/vim'
export VISUAL='/usr/bin/vim'
export TERMINAL='st'

HISTCONTROL=ignoreboth:erasedups
shopt -s histappend

shopt -s autocd
shopt -s checkwinsize

tput smkx # turn on keypad (fixes st delete key problems)
stty -ixon # disable Ctrl-S and Ctrl-Q (xoff/xon)

if [ -f /usr/share/git/completion/git-prompt.sh ]; then
	. /usr/share/git/completion/git-prompt.sh
	#GIT_PS1_SHOWDIRTYSTATE=1
	#GIT_PS1_SHOWSTASHSTATE=1
	#GIT_PS1_SHOWUNTRACKEDFILES=1
else
	__git_ps1() { echo; }
fi

if [ -f $XDG_CONFIG_HOME/aliases ]; then
	. $XDG_CONFIG_HOME/aliases
fi

if [ -f $XDG_CONFIG_HOME/dircolors ]; then
	eval "$(dircolors $XDG_CONFIG_HOME/dircolors)"
elif [ -f /etc/DIR_COLORS ]; then
	eval "$(dircolors /etc/DIR_COLORS)"
fi

prompt_gen() {
	let ret=$? # must be first
#	local fill="$(printf "%$(tput cols)s\n" | sed "s/ /─/g")\r"
	export PS1="[\[\e[1;32m\]\u\[\e[0;m\]@\[\e[1;33m\]\h\[\e[0;m\]::\[\e[1;31m\]\$ret\[\e[0;m\]]─[\[\e[1;34m\]\${PWD##*/}\[\e[0;m\]\$(__git_ps1 \"::\[\e[1;36m\]%s\[\e[0;m\]\")]─λ "
}
PROMPT_COMMAND="prompt_gen"

if [ "$TERM" = "linux" ]; then # fix colors on TTYs
	_SEDCMD='s/.*\*color\([0-9]\{1,\}\).*#\([0-9a-fA-F]\{6\}\).*/\1 \2/p'
	for i in $(sed -n "$_SEDCMD" $XDG_CONFIG_HOME/X11/Xresources | \
				awk '$1 < 16 {printf "\\e]P%X%s", $1, $2}'); do
		echo -en "$i"
	done
	clear
elif [[ -z "$TMUX" ]] && type tmux >/dev/null; then # don't open tmux on TTYs
	TMUX_ID="$(tmux list-sessions | grep -vm1 attached | cut -d: -f1)"
	if [[ -z "$TMUX_ID" ]]; then
		exec tmux -f $XDG_CONFIG_HOME/tmux/tmux.conf new-session
	else
		exec tmux -f $XDG_CONFIG_HOME/tmux/tmux.conf attach-session -t $TMUX_ID
	fi
fi

